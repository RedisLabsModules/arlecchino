#!/bin/bash

umask 002

PROGNAME="${BASH_SOURCE[0]}"
HERE="$(cd "$(dirname "$PROGNAME")" &>/dev/null && pwd)"
view=$(cd $HERE/../../.. && pwd)

[[ ! -e /opt/view ]] && ln -sf $view /opt/view
[[ ! -e /opt/readies ]] && ln -s /opt/view/arlecchino/readies /opt/readies
READIES=/opt/readies
. $READIES/shibumi/defs

#----------------------------------------------------------------------------------------------

patch_cmn() {
	[[ ! -d /opt/view/rlec/cnm-$CNM_VER ]] && return

	echo "Patching CNM..."
	/opt/redislabs/bin/python $HERE/sync-cnm.py cnm-$CNM_VER

	echo "Waiting for services..."
	$HERE/wait-for-service rlec_supervisord
	echo "Restarting services..."
	supervisorctl restart cnm_exec
	supervisorctl restart cnm_http
	supervisorctl restart cm_server
	echo "Waiting for services..."
	$HERE/wait-for-service rlec_supervisord
	[[ $NO_INTERNET != 1 ]] && sleep 5
}

[[ -e /opt/view/rlec/DEBUG ]] && DEBUG=1

#----------------------------------------------------------------------------------------------

if [[ $PROLOG == 1 && $DEBUG == 1 ]]; then
	$READIES/bin/getget

	echo "Installing bashdb..."
	$READIES/bin/getbashdb
	exit 0
fi

#----------------------------------------------------------------------------------------------

[[ -e /opt/view/rlec/NOPATCH ]] && NO_PATCH=1

[[ $NO_PATCH != 1 ]] && patch_cmn

[[ $NO_INTERNET == 1 ]] && exit 0

if is_command apt-get; then
	echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
fi

export PYTHONWARNINGS='ignore:DEPRECATION::pip._internal.cli.base_command'

# [[ $DEBUG != 1 ]] && $READIES/bin/getget

echo "Installing pip..."
PYTHON_VER="$(python --version 2>&1 | awk '{print $2}' | cut -d. -f1)"
if [[ $PYTHON_VER == 2 ]]; then
	VERBOSE= MYPY=/opt/redislabs/bin/python $READIES/bin/getpy2
else
	VERBOSE= MYPY=/opt/redislabs/bin/python $READIES/bin/getpy3
	ln -sf /opt/redislabs/bin/python /usr/local/bin/python3
fi
runn /opt/redislabs/bin/python -m pip install yq

echo "Installing packages..."
if [[ ! -z $(command -v apt-get) ]]; then
	runn apt-get install -y -o=Dpkg::Use-Pty=0 mc htop tmux jq
else
	runn yum install -y mc htop tmux jq
fi

#----------------------------------------------------------------------------------------------

[[ $DEBUG != 1 ]] && exit 0

echo "Installing pudb..."
if [[ $PYTHON_VER == 2 ]]; then
	NO_PY3=1 $READIES/bin/getpudb
else
	NO_PY2=1 $READIES/bin/getpudb
fi
if [[ ! -f /opt/redislabs/.config/pudb/pudb.cfg ]]; then
	mkdir -p /opt/redislabs/.config/pudb
	cp -R /root/.config/pudb/pudb.cfg /opt/redislabs/.config/pudb
	chown -R redislabs:redislabs /opt/redislabs/.config/pudb
fi

echo "Installing gdb..."
if is_command apt-get; then
	runn apt-get install -y gdb gdbserver
else
	runn yum install -y gdb gdbserver
fi
