#!/bin/bash

set -e

if [[ `uname -s` == Darwin ]]; then
	READLINK=greadlink
	if ! command greadlink; then
		brew install coreutils
	fi
else
	READLINK=readlink
fi

PROGNAME="${BASH_SOURCE[0]}"
HERE="$(cd "$(dirname "$($READLINK -f "$PROGNAME")")" >/dev/null 2>&1 && pwd)"
READIES=$(cd $HERE/../readies && pwd)
. $READIES/shibumi/defs

find_rlec() {
	d="$1"
	path_pattern="$2"
	while true; do
		if [[ $d == / ]]; then
			echo ""
			return 0
		fi
		if [[ -d $d/$path_pattern ]]; then
			echo $d
			return 0
		fi
		d=$(cd $d/.. && pwd)
	done
}

update_arlecchino() {
	if [[ $UPDATE == 0 ]]; then
		return
	fi
	local flast=$RLEC/rlec/.last-pull
	if [[ -f $flast && $flast -nt 1 ]]; then
		return
	fi
	local here="$PWD"
	cd $RLEC/arlecchino
	if [[ $(git rev-parse --abbrev-ref HEAD) != master ]]; then
		return
	fi
	if [[ $(git diff --quiet; echo $?) == 1 ]]; then
		return
	fi
	runn git pull --quiet --recurse-submodules
	touch $flast
	
	cd "$here"
	export UPDATE=0
	exec "$PROGNAME" "$@"
}

if [[ -z $RLEC ]]; then
	RLEC=$(find_rlec $PWD rlec/.arlecchino)
	if [[ -z $RLEC ]]; then
		RLEC=$(find_rlec $PWD arlecchino/.git)
		if [[ -z $RLEC ]]; then
			RLEC=$(find_rlec `cd $HERE/../.. && pwd` arlecchino/.git)
			if [[ -z $RLEC ]]; then
				echo "Cannot find RLEC; Try setting RLEC env var to the base dir of git repos."
				exit 1
			fi
		fi
	fi
fi
export RLEC

if [[ "$*" == *"--where"* ]]; then
	echo "$RLEC"
	exit 0
fi

if [[ ! -d $RLEC/rlec ]]; then
	mkdir $RLEC/rlec
	chmod 777 $RLEC/rlec
fi

update_arlecchino "$@"

[[ ! -d $RLEC/arlecchino/venv ]] && $RLEC/arlecchino/bin/setup-venv
source $RLEC/arlecchino/venv/bin/activate

if [[ "$*" == *"--debug"* ]]; then
	export BB=1
fi

[[ $(uname) == Darwin && -z $LC_ALL ]] && export LC_ALL='en_US.UTF-8'
{ cd $RLEC/arlecchino && python3 -m rlec $@; E=$?; } || true
exit $E
