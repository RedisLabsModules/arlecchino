#!/bin/bash

set -e

if [[ `uname -s` == Darwin ]]; then
	READLINK=greadlink
else
	READLINK=readlink
fi

HERE="$(cd "$(dirname "$($READLINK -f "${BASH_SOURCE[0]}")")" >/dev/null 2>&1 && pwd)"
READIES=$(cd $HERE/../readies && pwd)
. $READIES/shibumi/defs

find_rlec() {
	d="$1"
	path_pattern="$2"
	while true; do
		if [[ $d == / ]]; then
			echo ""
			return 0
		fi
		if [[ -d $d/$path_pattern ]]; then
			echo $d
			return 0
		fi
		d=$(cd $d/.. && pwd)
	done
}

update_arlecchino() {
	flast=$RLEC/rlec/.last-pull
	if [[ -f $flast && $flast -nt 1 ]]; then
		return
	fi
	cd $RLEC/arlecchino
	if [[ $(git rev-parse --abbrev-ref HEAD) != master ]]; then
		return
	fi
	if [[ $(git diff --quiet; echo $?) == 1 ]]; then
		return
	fi
	runn git pull --quiet --recurse-submodules
	touch $flast
}

if [[ -z $RLEC ]]; then
	RLEC=$(find_rlec $PWD rlec/.arlecchino)
	if [[ -z $RLEC ]]; then
		RLEC=$(find_rlec $PWD arlecchino/.git)
		if [[ -z $RLEC ]]; then
			RLEC=$(find_rlec `cd $HERE/../.. && pwd` arlecchino/.git)
			if [[ -z $RLEC ]]; then
				echo "Cannot find RLEC; Try setting RLEC env var to the base dir of git repos."
				exit 1
			fi
		fi
	fi
fi

update_arlecchino
[[ ! -d $RLEC/arlecchino/venv ]] && $RLEC/arlecchino/bin/setup-venv
source $RLEC/arlecchino/venv/bin/activate

if [[ -z $BB || $BB == 0 ]]; then
	{ python3 $RLEC/arlecchino/rlec $@; E=$?; } || true
else
	{ python3 -m pudb $RLEC/arlecchino/rlec/__main__.py $@; E=$?; } || true
fi
exit $E
